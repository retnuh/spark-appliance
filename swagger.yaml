swagger: '2.0'
info:
  title: Spark appliance
  version: "0.1"
consumes:
  - text/plain
produces:
  - text/plain
paths:
  /:
    get:
      summary: Check for authorization
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_dummy
      responses:
        200:
          description: It's working
        401:
          description: Unauthorized
  /.well-known/schema-discovery:
    get:
      summary: Endpoint for TWINTIP
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_twintip
      responses:
        200:
          description: It's working
        401:
          description: Unauthorized
  /get_master_uri:
    get:
      summary: Get URI of Spark masters
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_master_uri
      responses:
        200:
          description: Return Master URI
        404:
          description: Master not found
  /get_master_ip:
    get:
      summary: Get IP of current alive Spark master
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_master_ip
      responses:
        200:
          description: Return Master IP
        404:
          description: Master not found
  /get_thrift_server_uri:
    get:
      summary: Get URI of Spark thrift server
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_thrift_server_uri
      responses:
        200:
          description: Return Thrift Server URI
        404:
          description: Thrift server not running
  /send_query:
    post:
      summary: Send SQL query to Spark thrift server
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.send_query
      parameters:
        - name: file
          description: query file
          in: formData
          type: file
          required: true
        - name: hive_vars
          description: whitespace-separated list of --hivevar parameters
          in: formData
          type: string
          required: false
        - name: hive_confs
          description: whitespace-separated list of --hiveconf parameters
          in: formData
          type: string
          required: false
        - name: username
          description: username to login
          in: formData
          type: string
          required: false
        - name: password
          description: password to login
          in: formData
          type: string
          required: false
      responses:
        200:
          description: Successful
        500:
          description: Failed to send query
  /submit_application:
    post:
      summary: Submit Spark JAR or Python application
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.submit_application
      parameters:
        - name: file
          description: application file
          in: formData
          type: file
          required: true
        - name: main_class
          description: main class of JAR application
          in: formData
          type: string
          required: false
        - name: job_args
          description: Arguments (whitespace-separated) for Spark App Jar or Python script
          in: formData
          type: string
          required: false
        - name: job_settings
          description: Spark settings (whitespace-separated) for Spark App Jar or Python script
          in: formData
          type: string
          required: false
      responses:
        200:
          description: Successful
        500:
          description: Failed to submit application
  /get_job_status/{job_id}:
    get:
      summary: Get status of a submitted Spark application or Spark SQL query
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_job_status
      parameters:
        - name: job_id
          description: ID of Spark application or Spark SQL query
          in: path
          type: string
          required: true
      responses:
        200:
          description: Job Status is returned, but job still running
        201:
          description: Job Status is returned and Job Finished
        404:
          description: Job ID not found
        500:
          description: Failed
  /get_job_output/{job_id}:
    get:
      summary: Get outputs of a submitted Spark application or Spark SQL query
      security:
        - oauth2: ["{{oauth2_scope}}"]
      operationId: webapp.get_job_output
      parameters:
        - name: job_id
          description: ID of Spark application or Spark SQL query
          in: path
          type: string
          required: true
      responses:
        200:
          description: Successful
        404:
          description: ID not found
securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: "{{ auth_url if auth_url }}"
    x-tokenInfoUrl: "{{ tokeninfo_url if tokeninfo_url }}"
    scopes:
      "{{oauth2_scope}}": OAuth2 scope to access the WebApp
